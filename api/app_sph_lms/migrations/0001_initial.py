# Generated by Django 4.2.2 on 2023-06-22 09:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('last_name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('is_active', models.BooleanField(default=1)),
                ('is_trainer', models.BooleanField(default=0)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('image', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('trainer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainees', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
                'db_table': 'app_sph_lms_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)])),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
                'db_table': 'app_sph_lms_categories',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(max_length=65000, null=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Course',
                'db_table': 'app_sph_lms_courses',
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(max_length=65000, null=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('image', models.CharField(max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_path', to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(related_name='category', to='app_sph_lms.category')),
            ],
            options={
                'verbose_name': 'LearningPath',
                'verbose_name_plural': 'LearningPaths',
                'db_table': 'app_sph_lms_learning_paths',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)])),
                ('link', models.URLField(max_length=600)),
                ('description', models.TextField(max_length=65000, null=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='app_sph_lms.course')),
            ],
        ),
        migrations.CreateModel(
            name='LearningPathCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_order', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_path_course', to='app_sph_lms.course')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_path_course', to='app_sph_lms.learningpath')),
            ],
            options={
                'verbose_name': 'LearningPathCourse',
                'verbose_name_plural': 'LearningPathCourse',
                'db_table': 'app_sph_lms_learning_path_courses',
                'unique_together': {('learning_path', 'course')},
            },
        ),
        migrations.AddField(
            model_name='learningpath',
            name='courses',
            field=models.ManyToManyField(related_name='learning_path', through='app_sph_lms.LearningPathCourse', to='app_sph_lms.course'),
        ),
        migrations.AddField(
            model_name='learningpath',
            name='trainee',
            field=models.ManyToManyField(limit_choices_to={'is_trainer': False}, related_name='enrolled_learning_paths', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sph_lms.category')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_sph_lms.course')),
            ],
            options={
                'verbose_name': 'CourseCategory',
                'verbose_name_plural': 'CourseCategory',
                'db_table': 'app_sph_lms_course_categories',
                'unique_together': {('course', 'category')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ManyToManyField(related_name='categories', through='app_sph_lms.CourseCategory', to='app_sph_lms.category'),
        ),
        migrations.AddField(
            model_name='course',
            name='trainee',
            field=models.ManyToManyField(limit_choices_to={'is_trainer': False}, related_name='enrolled_course', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CompletedLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson', to='app_sph_lms.lesson')),
                ('trainee', models.ForeignKey(limit_choices_to={'is_trainer': False}, on_delete=django.db.models.deletion.CASCADE, related_name='trainee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CompletedLesson',
                'verbose_name_plural': 'CompletedLessons',
                'db_table': 'app_sph_lms_completed_lessons',
            },
        ),
    ]
